* maple-json
  [[LICENSE][https://img.shields.io/badge/license-BSD-blue.svg]]
  [[https://www.python.org/download/releases/3.0/][https://img.shields.io/badge/python-3.5-green.svg]]

* How to use
  it's simple to use(take flask-sqlalchemy as an example)

** multi instances
   #+BEGIN_SRC python
   posts = Post.query.all()
   serializer = Serializer(posts,many=True)
   data = serializer.data
   #+END_SRC

** single instance
   #+BEGIN_SRC python
   post = Post.query.first()
   serializer = Serializer(post,many=False)
   data = serializer.data
   #+END_SRC

** exclude some columns
   #+BEGIN_SRC python
   serializer = Serializer(post,exclude=['title'])
   #+END_SRC

** only include some column
   #+BEGIN_SRC python
   serializer = Serializer(post,include=['title'])
   #+END_SRC

** relation depth
   #+BEGIN_SRC python
   serializer = Serializer(post,depth=3)
   #+END_SRC
   - depth
     default:2

** add some custom function
   #+BEGIN_SRC python
   serializer = Serializer(post,extra=['get_post_count'])
   #+END_SRC
   Post
   #+BEGIN_SRC python
     class Post(Model):
         ......
         def get_post_count(self):
             return 11
   #+END_SRC

* Other
  #+BEGIN_SRC python
    class PostSerializer(Serializer):
        count = Field(source = 'get_post_count',args={'name':'hello'},default=20)
        class Meta:
            include = []
            depth = 2
            include = []
            exclude = []
            extra = ['count']
  #+END_SRC

